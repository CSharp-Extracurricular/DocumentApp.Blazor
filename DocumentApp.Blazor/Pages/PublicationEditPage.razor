@page "/edit/{CurrentPublicationIdString}"

@inject HttpClient Http
@inject NavigationManager Nav

<PageTitle>Редактирование публикации</PageTitle>
<PageHeader>Редактирование публикации</PageHeader>

<PublicationEditor @bind-BindingValue="_publication">
    <button class="add-publication-button" @onclick="async () => await AddPublication()">Сохранить изменения</button>
</PublicationEditor>

@code
{
    private const string PageAfterAddition = "";
    private const string PutEndpointUrl = "https://localhost:7204/api/Edit/";

    private PublicationDto _publication = new();

    private async Task AddPublication()
    {
        await SendPutRequest(_publication);
        Nav.NavigateTo(PageAfterAddition);
    }

    [Parameter]
    public string? CurrentPublicationIdString { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!Guid.TryParse(CurrentPublicationIdString, out _))
        {
            throw new Exception("Guid parsing error");
        }

        PublicationDto? result = await Http.GetFromJsonAsync<PublicationDto?>($"https://localhost:7204/api/View/{CurrentPublicationIdString}");

        _publication = result ?? throw new Exception("Publication not found");
    }

    private async Task SendPutRequest(PublicationDto publicationDto) 
        => await Http.PutAsJsonAsync(PutEndpointUrl, publicationDto);
}
