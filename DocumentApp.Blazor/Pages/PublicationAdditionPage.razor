@page "/add"

@inject HttpClient Http
@inject NavigationManager Nav

<PageTitle>Добавление публикации</PageTitle>

<div class="Block_C">
    <h2 class="list__source__title">Добавление публикации</h2>
</div>

<div class="main-container">
    <div class="tabs">
        <input type="radio" name="tab-btn" id="tab-btn-1" value="" checked>
        <label for="tab-btn-1">Основная информация</label>
        <input type="radio" name="tab-btn" id="tab-btn-2" value="">
        <label for="tab-btn-2">Авторы</label>
        <input type="radio" name="tab-btn" id="tab-btn-3" value="">
        <label for="tab-btn-3">Индексация</label>
        <input type="radio" name="tab-btn" id="tab-btn-4" value="">
        <label for="tab-btn-4">Конференция</label>

        <div id="content-1">
            <div class="Info">
                <h3 class="addition-page-tab-header">Основная информация</h3>

                <InputField @bind-BindingValue="Publication.Title">Название</InputField>

                <div class="block__info">
                    <p>Год публикации</p>
                    <input maxlength="4" type="number" @bind="Publication.PublishingYear"/>
                </div>
                
                <InputFieldSelector @bind-BindingValue="Publication.PublicationType">
                    Тип публикации
                </InputFieldSelector>
            </div>
        </div>
        <div id="content-2">
            <div class="Info">
                <h3>Авторы</h3>

                <InputField @bind-BindingValue="Author.LastName">Фамилия</InputField>
                <InputField @bind-BindingValue="Author.FirstName">Имя</InputField>
                <InputField @bind-BindingValue="Author.PatronimicName">Отчество</InputField>
                <InputField @bind-BindingValue="Author.Email">E-mail</InputField>

                <p class="TitleMini">Добавленные авторы</p>
                <div class="block__info">
                    <ol>
                        @foreach (AuthorDto author in Publication.Authors)
                        {
                            <br/>
                            <li>
                                @author.LastName @author.FirstName @author.PatronimicName
                                <button class="ButtonDeleteAutor" @onclick="() => RemoveAuthor(author)">
                                    Удалить
                                </button>
                            </li>
                        }
                    </ol>
                </div>
                <button class="button" @onclick="AddAuthor">Добавить автора</button>
            </div>
        </div>
        <div id="content-3">
            <div class="Info">
                <h3>Индексация</h3>
                
                <InputFieldSelector @bind-BindingValue="Index.Indexator">
                    Индексатор
                </InputFieldSelector>

                <div class="block__info">
                    <p>URL записи об индексе</p>
                    <input type="url" value="@Index.URL"
                           @onchange="@(e => Index.URL = new Uri(e.Value?.ToString()!))" />
                </div>
                <div class="block__info">
                    <p>Добавленные записи об индексации</p>
                    <ul>
                        @foreach (CitationIndexDto index in Publication.CitationIndices)
                        {
                            <li>
                                @Enum.GetName(index.Indexator) @index.URL
                                <button @onclick="() => RemoveIndex(index)">
                                    Удалить запись об индексе
                                </button>
                            </li>
                        }
                    </ul>
                </div>
                <button class="button" @onclick="AddIndex">Добавить индекс</button>
            </div>
        </div>
        <div id="content-4">
            <div class="Info">
                <h3>Представление на конференции</h3>

                <InputField @bind-BindingValue="Conference.ShortName">Краткое название</InputField>
                <InputField @bind-BindingValue="Conference.FullName">Полное название</InputField>

                <div class="block__info">
                    <p>Дата начала</p>
                    <input type="date" @bind="Conference.StartDate" />
                </div>
                <div class="block__info">
                    <p>Дата окончания</p>
                    <input type="date" @bind="Conference.EndDate" />
                </div>
                <InputFieldSelector @bind-BindingValue="Conference.Type">
                    Индексатор
                </InputFieldSelector>

                <InputField @bind-BindingValue="Conference.Location">Место проведения</InputField>
                
                <button class="button" @onclick="AddConference">Добавить конференцию</button>

                @if (Publication.Conference != null)
                {
                    <p>@Publication.Conference.ShortName</p>
                    <button class="button" @onclick="RemoveConference">Удалить конференцию</button>
                }
            </div>
        </div>
    </div>
    
    <button class="AddSource__Record" @onclick="async () => await AddPublication()">Добавить</button>
</div>

@code
{
    private const string PageAfterAddition = "";

    public PublicationDto Publication = new() { PublishingYear = 2022 };
    public AuthorDto Author = new();
    public CitationIndexDto Index = new();
    public ConferenceDto Conference = new() { StartDate = DateTime.Now, EndDate = DateTime.Now };

    public void AddAuthor()
    {
        Author.PublicationId = Publication.Id;
        Publication.Authors.Add(Author);
        Author = new AuthorDto();
    } 

    public void RemoveAuthor(AuthorDto author) => RemoveElementFromList(author, Publication.Authors);

    public void AddIndex()
    {
        Index.PublicationId = Publication.Id;
        Publication.CitationIndices.Add(Index);
        Index = new CitationIndexDto();
    }

    public void RemoveIndex(CitationIndexDto index) => RemoveElementFromList(index, Publication.CitationIndices);

    public void AddConference()
    {
        Conference.PublicationId = Publication.Id;
        Publication.Conference = Conference;
    }

    public void RemoveConference()
    {
        Publication.Conference = null;
        Conference = new ConferenceDto{ StartDate = DateTime.Now, EndDate = DateTime.Now };
    }

    public async Task AddPublication()
    {
        await SendPostRequestWithBodyAsync(Publication);
        Nav.NavigateTo(PageAfterAddition);
    }

    public async Task SendPostRequestWithBodyAsync(PublicationDto publicationDto) 
        => await Http.PostAsJsonAsync("https://localhost:7204/api/Edit", publicationDto);

    private static void RemoveElementFromList<T>(T element, ICollection<T> collection) where T : class
    {
        if (collection.Contains(element))
        {
            collection.Remove(element);
        }
        else
        {
            throw new NullReferenceException();
        }
    }
}